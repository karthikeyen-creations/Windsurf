TBCREATOR,TBNAME,TNAME,NAME,COLTYPE,COLUMN_LENGTH
DA73,TD784_GABM_CMPGN,GABM_CMPGN,CMPGN_ID,CHAR _ ,25
DA73,TD784_GABM_CMPGN,GABM_CMPGN,CMPGN_NM,CHAR __,100
DA73,1D784_GABM_CMPGN,GABM_CMPGN,CMPGN_DS,VARCHAR ,400
DA73,TD784_GABM_CMPGN,GABM_CMPGN,CMPGN_PROMO_CD,CHAR_ 64
DA73,TD784_GABM_CMPGN,GABM_CMPGN,CMPGN_STA_TX,CHAR _,10
DA73,TD784_GABM_CMPGN,GABM_CMPGN,CREAT_TS, TIMESTMP, 10
DA73,TD784_GABM_CMPGN,GABM_CMPGN,LST_UPDT_TS,TIMESTMP,10
DA73,1D784_GABM_CMPGN,GABM_CMPGN,CMPGN_CONTEST_MAX_ENTER_CT,SMALLINT,2
DA73,TD784_GABM_CMPGN,GABM_CMPGN,CMPGN_TRGT_REGIS_CT,INTEGER ,4
DA73,TD784_GABM_CMPGN,GABM_CMPGN,BUS_PRTR_DRCT_OWN_NM,CHAR 50
DA73,1D784_GABM_CMPGN,GABM_CMPGN,CMPGN_STRT_DT,DATE 4
DA73,TD784_GABM_CMPGN,GABM_CMPGN,CMPGN_END_DT,DATE 4
DA73,TD784_GABM_CMPGN,GABM_CMPGN,DA_PRG_DT,DATE _,4
DA73,TD784_GABM_CMPGN,GABM_CMPGN,CREAT_BY_USER_TYPE_TX,CHAR  ,10
DA73,1D784_GABM_CMPGN,GABM_CMPGN,UPDT_BY_USER_TYPE_TX,CHAR  ,10
DA73,TD784_GABM_CMPGN,GABM_CMPGN,ENROLL_SUC_EMAIL_SEND_IN,CHAR  ,1
DA73,TD784_GABM_CMPGN,GABM_CMPGN,ENROLL_SUC_EMAIL_TMPLT_ID,CHAR  ,20
DA73,TD784_GABM_CMPGN,GABM_CMPGN,ENROLL_STA_EMAIL_SEND_IN,CHAR  ,1
DA73,TD784_GABM_CMPGN,GABM_CMPGN,ENROLL_STA_EMAIL_TMPLT_ID,CHAR  ,20
DA73,1D784_GABM_CMPGN,GABM_CMPGN,CMPGN_IM_URL_AD_TX,CHAR 254
DA73,TD784_GABM_CMPGN,GABM_CMPGN,EMS_EXTNL_PROMO_ID,CHAR 64
DA73,TD784_GABM_CMPGN,GABM_CMPGN,EMS_EXTNL_PRTR_ID,CHAR ,64
DA73,TD784_GABM_CMPGN,GABM_CMPGN,CMPGN_LIVE_DT,DATE 4
DA73,T1241_GABM_CMPGN_AUD,GABM_CMPGN_AUD,AUD_CREAT_TS,TIMESTMP, 10
DA73,T1241_GABM_CMPGN_AUD,GABM_CMPGN_AUD,CMPGN_ID,CHAR  ,25
DA73,TI241_GABM_CMPGN_AUD,GABM_CMPGN_AUD,CMPGN_NM,CHAR 100
DA73,T1241_GABM_CMPGN_AUD,GABM_CMPGN_AUD,CMPGN_DS, VARCHAR ,400
DA73,T1241_GABM_CMPGN_AUD,GABM_CMPGN_AUD,CMPGN_PROMO_CD,CHAR__,64
DA73,T1241_GABM_CMPGN_AUD,GABM_CMPGN_AUD,CMPGN_STA_TX,CHAR _ 10
DA73,T1241_GABM_CMPGN_AUD,GABM_CMPGN_AUD,CREAT_TS,TIMESTMP, 10
DA73,T1241_GABM_CMPGN_AUD,GABM_CMPGN_AUD,LST_UPDT_TS,TIMESTMP,10
DA73,T1241_GABM_CMPGN_AUD,GABM_CMPGN_AUD,CMPGN_CONTEST_MAX_ENTER_CT,SMALLINT,2
DA73,T1241_GABM_CMPGN_AUD,GABM_CMPGN_AUD,CMPGN_TRGT_REGIS_CT,INTEGER ,4
DA73,1I241_GABM_CMPGN_AUD,GABM_CMPGN_AUD,BUS_PRTR_DRCT_OWN_NM,CHAR  ,50
DA73,T1241_GABM_CMPGN_AUD,GABM_CMPGN_AUD,CMPGN_STRT_DT,DATE ,4
DA73,T1241_GABM_CMPGN_AUD,GABM_CMPGN_AUD,CMPGN_END_DT,DATE 4
DA73,T1241_GABM_CMPGN_AUD,GABM_CMPGN_AUD,DA_PRG_DT,DATE 4
DA73,T1241_GABM_CMPGN_AUD,GABM_CMPGN_AUD,CREAT_BY_USER_TYPE_TX,CHAR  ,10
DA73,TI241_GABM_CMPGN_AUD,GABM_CMPGN_AUD,UPDT_BY_USER_TYPE_TX,CHAR ,10
DA73,T1241_GABM_CMPGN_AUD,GABM_CMPGN_AUD,ENROLL_SUC_EMAIL_SEND_IN,CHAR 1
DA73,T1241_GABM_CMPGN_AUD,GABM_CMPGN_AUD,ENROLL_SUC_EMAIL_TMPLT_ID,CHAR  ,20
DA73,T1241_GABM_CMPGN_AUD,GABM_CMPGN_AUD,ENROLL_STA_EMAIL_SEND_iN,CHAR 1
DA73,T1241_GABM_CMPGN_AUD,GABM_CMPGN_AUD,ENROLL_STA_EMAIL_TMPLT_ID,CHAR ,20
DA73,T1241_GABM_CMPGN_AUD,GABM_CMPGN_AUD,CMPGN_IM_URL_AD_TX,CHAR 254
DA73,T1241_GABM_CMPGN_AUD,GABM_CMPGN_AUD,EMS_EXTNL_PROMO_ID,CHAR _,64
DA73,T1241_GABM_CMPGN_AUD,GABM_CMPGN_AUD,EMS_EXTNL_PRTR_ID,CHAR 64
CREATE OR REPLACE FUNCTION tgabm00.e3rp5192(
    IN_CMPGN_ID CHAR(25),
    IN_LST_UPDT_BY_PRCS_NM CHAR(10)
) RETURNS TABLE(SQLCODE_PARM CHAR(10), RESP_CD CHAR(14), RESP_MSG CHAR(100)) AS $$
DECLARE
    SQLCODE CHAR(10);
    REC_EXISTS INTEGER;
BEGIN
    SQLCODE_PARM := '';
    RESP_CD := '';
    RESP_MSG := '';

    -- VERIFY IF CAMPAIGN EXIST.
    BEGIN
        SELECT 1 INTO REC_EXISTS
        FROM tgabm00.gabm_cmpgn C
        WHERE C.cmpgn_id = IN_CMPGN_ID
        LIMIT 1;

        SQLCODE := '0';
        RESP_CD := 'E35192000';
        RESP_MSG := 'CAMPAIGN ID FOUND.';
        SQLCODE_PARM := SQLCODE;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            SQLCODE := '100';
            RESP_CD := 'E35192100';
            RESP_MSG := 'CAMPAIGN ID NOT FOUND.';
            SQLCODE_PARM := SQLCODE;
            RETURN QUERY SELECT SQLCODE_PARM, RESP_CD, RESP_MSG;
        WHEN OTHERS THEN
            SQLCODE := SQLSTATE;
            RESP_CD := 'E35192900';
            RESP_MSG := 'THE SYSTEM CANNOT PROCESS YOUR REQUEST. PLEASE TRY AFTER SOME TIME.';
            SQLCODE_PARM := SQLCODE;
            RETURN QUERY SELECT SQLCODE_PARM, RESP_CD, RESP_MSG;
    END;

    -- UPDATE(DELETE) APPL_CMPNT_RWRD_PARM TABLE
    BEGIN
        UPDATE tgabm00.gabm_appl_cmpnt_rwrd_parm ACRP
        SET act_in = 'N',
            lst_updt_by_prcs_nm = IN_LST_UPDT_BY_PRCS_NM,
            lst_updt_ts = CURRENT_TIMESTAMP
        WHERE rwrd_id IN (
            SELECT CR.rwrd_id
            FROM tgabm00.gabm_cmpgn_rwrd CR
            WHERE CR.cmpgn_id = IN_CMPGN_ID
        );

        SQLCODE := '0';
        RESP_CD := 'E35192001';
        RESP_MSG := 'APPL CMPNT RWRD PARM UPDATED SUCCESSFULLY';
        SQLCODE_PARM := SQLCODE;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            SQLCODE := '100';
            RESP_CD := 'E35192101';
            RESP_MSG := 'NO ROWS TO UPDATE.';
            SQLCODE_PARM := SQLCODE;
        WHEN OTHERS THEN
            SQLCODE := SQLSTATE;
            RESP_CD := 'E35192901';
            RESP_MSG := 'THE SYSTEM CANNOT PROCESS YOUR REQUEST. PLEASE TRY AFTER SOME TIME.';
            SQLCODE_PARM := SQLCODE;
            RETURN QUERY SELECT SQLCODE_PARM, RESP_CD, RESP_MSG;
    END;

    -- UPDATE(DELETE) GABM_RWRD_APPL_CMPNT TABLE
    BEGIN
        UPDATE tgabm00.gabm_rwrd_appl_cmpnt RAC
        SET act_in = 'N',
            lst_updt_by_prcs_nm = IN_LST_UPDT_BY_PRCS_NM,
            lst_updt_ts = CURRENT_TIMESTAMP
        WHERE rwrd_id IN (
            SELECT CR.rwrd_id
            FROM tgabm00.gabm_cmpgn_rwrd CR
            WHERE CR.cmpgn_id = IN_CMPGN_ID
        );

        SQLCODE := '0';
        RESP_CD := 'E35192002';
        RESP_MSG := 'RWRD APPL CMPNT UPDATED SUCCESSFULLY';
        SQLCODE_PARM := SQLCODE;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            SQLCODE := '100';
            RESP_CD := 'E35192102';
            RESP_MSG := 'NO ROWS TO UPDATE.';
            SQLCODE_PARM := SQLCODE;
        WHEN OTHERS THEN
            SQLCODE := SQLSTATE;
            RESP_CD := 'E35192902';
            RESP_MSG := 'THE SYSTEM CANNOT PROCESS YOUR REQUEST. PLEASE TRY AFTER SOME TIME.';
            SQLCODE_PARM := SQLCODE;
            RETURN QUERY SELECT SQLCODE_PARM, RESP_CD, RESP_MSG;
    END;

    -- UPDATE(DELETE) GABM_RWRD TABLE
    BEGIN
        UPDATE tgabm00.gabm_rwrd R
        SET act_in = 'N',
            lst_updt_by_prcs_nm = IN_LST_UPDT_BY_PRCS_NM,
            lst_updt_ts = CURRENT_TIMESTAMP
        WHERE rwrd_id IN (
            SELECT CR.rwrd_id
            FROM tgabm00.gabm_cmpgn_rwrd CR
            WHERE CR.cmpgn_id = IN_CMPGN_ID
        );

        SQLCODE := '0';
        RESP_CD := 'E35192003';
        RESP_MSG := 'RWRD DTL UPDATED SUCCESSFULLY.';
        SQLCODE_PARM := SQLCODE;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            SQLCODE := '100';
            RESP_CD := 'E35192103';
            RESP_MSG := 'NO ROWS TO UPDATE.';
            SQLCODE_PARM := SQLCODE;
        WHEN OTHERS THEN
            SQLCODE := SQLSTATE;
            RESP_CD := 'E35192903';
            RESP_MSG := 'THE SYSTEM CANNOT PROCESS YOUR REQUEST. PLEASE TRY AFTER SOME TIME.';
            SQLCODE_PARM := SQLCODE;
            RETURN QUERY SELECT SQLCODE_PARM, RESP_CD, RESP_MSG;
    END;

    -- UPDATE(DELETE) GABM_CMPGN_RWRD TABLE
    BEGIN
        UPDATE tgabm00.gabm_cmpgn_rwrd CR
        SET act_in = 'N',
            lst_updt_by_prcs_nm = IN_LST_UPDT_BY_PRCS_NM,
            lst_updt_ts = CURRENT_TIMESTAMP
        WHERE cmpgn_id = IN_CMPGN_ID;

        SQLCODE := '0';
        RESP_CD := 'E35192004';
        RESP_MSG := 'CMPGN RWRD DTL UPDATED SUCCESSFULLY.';
        SQLCODE_PARM := SQLCODE;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            SQLCODE := '100';
            RESP_CD := 'E35192104';
            RESP_MSG := 'NO ROWS TO UPDATE.';
            SQLCODE_PARM := SQLCODE;
        WHEN OTHERS THEN
            SQLCODE := SQLSTATE;
            RESP_CD := 'E35192904';
            RESP_MSG := 'THE SYSTEM CANNOT PROCESS YOUR REQUEST. PLEASE TRY AFTER SOME TIME.';
            SQLCODE_PARM := SQLCODE;
            RETURN QUERY SELECT SQLCODE_PARM, RESP_CD, RESP_MSG;
    END;

    -- UPDATE(DELETE) GABM_CMPGN_CTRY TABLE
    BEGIN
        UPDATE tgabm00.gabm_cmpgn_ctry CC
        SET act_in = 'N',
            lst_updt_by_prcs_nm = IN_LST_UPDT_BY_PRCS_NM,
            lst_updt_ts = CURRENT_TIMESTAMP
        WHERE cmpgn_id = IN_CMPGN_ID;

        SQLCODE := '0';
        RESP_CD := 'E35192005';
        RESP_MSG := 'CMPGN CTRY DTL UPDATED SUCCESSFULLY.';
        SQLCODE_PARM := SQLCODE;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            SQLCODE := '100';
            RESP_CD := 'E35192105';
            RESP_MSG := 'NO ROWS TO UPDATE.';
            SQLCODE_PARM := SQLCODE;
        WHEN OTHERS THEN
            SQLCODE := SQLSTATE;
            RESP_CD := 'E35192905';
            RESP_MSG := 'THE SYSTEM CANNOT PROCESS YOUR REQUEST. PLEASE TRY AFTER SOME TIME.';
            SQLCODE_PARM := SQLCODE;
            RETURN QUERY SELECT SQLCODE_PARM, RESP_CD, RESP_MSG;
    END;

    -- UPDATE(DELETE) GABM_CMPGN TABLE
    BEGIN
        UPDATE tgabm00.gabm_cmpgn C
        SET cmpgn_end_dt = CURRENT_DATE - INTERVAL '1 day',
            updt_by_user_type_tx = IN_LST_UPDT_BY_PRCS_NM,
            lst_updt_ts = CURRENT_TIMESTAMP
        WHERE cmpgn_id = IN_CMPGN_ID;

        SQLCODE := '0';
        RESP_CD := 'E35192006';
        RESP_MSG := 'CMPGN DTL UPDATED SUCCESSFULLY.';
        SQLCODE_PARM := SQLCODE;
        RETURN QUERY SELECT SQLCODE_PARM, RESP_CD, RESP_MSG;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            SQLCODE := '100';
            RESP_CD := 'E35192106';
            RESP_MSG := 'NO ROWS TO UPDATE.';
            SQLCODE_PARM := SQLCODE;
            RETURN QUERY SELECT SQLCODE_PARM, RESP_CD, RESP_MSG;
        WHEN OTHERS THEN
            SQLCODE := SQLSTATE;
            RESP_CD := 'E35192906';
            RESP_MSG := 'THE SYSTEM CANNOT PROCESS YOUR REQUEST. PLEASE TRY AFTER SOME TIME.';
            SQLCODE_PARM := SQLCODE;
            RETURN QUERY SELECT SQLCODE_PARM, RESP_CD, RESP_MSG;
    END;
EXCEPTION
    WHEN OTHERS THEN
        SQLCODE := SQLSTATE;
        RESP_CD := 'E35192999';
        RESP_MSG := 'UNEXPECTED ERROR OCCURRED.';
        SQLCODE_PARM := SQLCODE;
        RETURN QUERY SELECT SQLCODE_PARM, RESP_CD, RESP_MSG;
END;
$$ LANGUAGE plpgsql;
CREATE OR REPLACE FUNCTION tgabm00.e3rps174(
	IN_CMPGN_ID CHAR(25),
	IN_CMPGN_NM CHAR(100),
	IN_CMPGN_STRT_DT DATE,
	IN_CMPGN_END_DT DATE,
	IN_FETCH_IND CHAR(10)
) RETURNS TABLE (
	SQLCODE_PARM CHAR(10),
	RESP_CD CHAR(14),
	RESP_MSG CHAR(100),
	CMPGN_ID CHAR(25),
	CMPGN_NM CHAR(100),
	CMPGN_DS TEXT,
	CMPGN_PROMO_CD CHAR(10),
	CMPGN_STA_TX TEXT,
	CREAT_TS TIMESTAMP,
	LST_UPDT_TS TIMESTAMP,
	CMPGN_CONTEST_MAX_ENTER_CT INTEGER,
	CMPGN_TRGT_REGIS_CT INTEGER,
	BUS_PRTR_DRCT_OWN_NM TEXT,
	CMPGN_STRT_DT DATE,
	CMPGN_END_DT DATE,
	DA_PRG_DT DATE,
	CREAT_BY_USER_TYPE_TX TEXT,
	UPDT_BY_USER_TYPE_TX TEXT,
	ENROLL_SUC_EMAIL_SEND_IN CHAR(1),
	ENROLL_SUC_EMAIL_TMPLT_ID CHAR(10),
	ENROLL_STA_EMAIL_SEND_IN CHAR(1),
	ENROLL_STA_EMAIL_TMPLT_ID CHAR(10),
	CMPGN_IM_URL_AD_TX TEXT,
	EMS_EXTNL_PROMO_ID CHAR(10),
	EMS_EXTNL_PRTR_ID CHAR(10),
	CMPGN_LIVE_DT DATE
) AS $$
DECLARE
	SQLCODE CHAR(10);
	HV_CMPGN_NM VARCHAR(100);
	HV_CMPGN_NM1 VARCHAR(100);
BEGIN
	SQLCODE_PARM := '';
	RESP_CD := '';
	RESP_MSG := '';

	IF IN_FETCH_IND = 'CMPGNID' THEN
		BEGIN
			SQLCODE := '0';
			RESP_CD := 'E35174001';
			RESP_MSG := 'CMPGN ID DETAIL FETCH SUCCESSFULLY.';
			SQLCODE_PARM := SQLCODE;
			RETURN QUERY
			SELECT SQLCODE_PARM, RESP_CD, RESP_MSG, CMPGN_ID, CMPGN_NM, CMPGN_DS, CMPGN_PROMO_CD, CMPGN_STA_TX,
				   CREAT_TS, LST_UPDT_TS, CMPGN_CONTEST_MAX_ENTER_CT,
				   CMPGN_TRGT_REGIS_CT, BUS_PRTR_DRCT_OWN_NM, CMPGN_STRT_DT,
				   CMPGN_END_DT, DA_PRG_DT, CREAT_BY_USER_TYPE_TX,
				   UPDT_BY_USER_TYPE_TX, ENROLL_SUC_EMAIL_SEND_IN,
				   ENROLL_SUC_EMAIL_TMPLT_ID, ENROLL_STA_EMAIL_SEND_IN,
				   ENROLL_STA_EMAIL_TMPLT_ID, CMPGN_IM_URL_AD_TX,
				   EMS_EXTNL_PROMO_ID, EMS_EXTNL_PRTR_ID, CMPGN_LIVE_DT
			FROM tgabm00.GABM_CMPGN
			WHERE CMPGN_ID = IN_CMPGN_ID;
		EXCEPTION
			WHEN OTHERS THEN
				SQLCODE := SQLSTATE;
				RESP_CD := 'E35174901';
				RESP_MSG := 'THE SYSTEM CANNOT PROCESS YOUR REQUEST. PLEASE TRY AFTER SOME TIME.';
				SQLCODE_PARM := SQLCODE;
				RETURN QUERY SELECT SQLCODE_PARM, RESP_CD, RESP_MSG, NULL::CHAR(25), NULL::CHAR(100), NULL::TEXT, NULL::CHAR(10), NULL::TEXT, NULL::TIMESTAMP, NULL::TIMESTAMP, NULL::INTEGER, NULL::INTEGER, NULL::TEXT, NULL::DATE, NULL::DATE, NULL::DATE, NULL::TEXT, NULL::TEXT, NULL::CHAR(1), NULL::CHAR(10), NULL::CHAR(1), NULL::CHAR(10), NULL::TEXT, NULL::CHAR(10), NULL::CHAR(10), NULL::DATE;
		END;
	ELSIF IN_FETCH_IND = 'CMPGNNM' THEN
		HV_CMPGN_NM := '%' || TRIM(LEADING FROM IN_CMPGN_NM);
		HV_CMPGN_NM1 := TRIM(TRAILING FROM HV_CMPGN_NM) || '%';

		BEGIN
			SQLCODE := '0';
			RESP_CD := 'E35174002';
			RESP_MSG := 'CMPGN NM DETAIL FETCH SUCCESSFULLY.';
			SQLCODE_PARM := SQLCODE;
			RETURN QUERY
			SELECT SQLCODE_PARM, RESP_CD, RESP_MSG, CMPGN_ID, CMPGN_NM, CMPGN_DS, CMPGN_PROMO_CD, CMPGN_STA_TX,
				   CREAT_TS, LST_UPDT_TS, CMPGN_CONTEST_MAX_ENTER_CT,
				   CMPGN_TRGT_REGIS_CT, BUS_PRTR_DRCT_OWN_NM, CMPGN_STRT_DT,
				   CMPGN_END_DT, DA_PRG_DT, CREAT_BY_USER_TYPE_TX,
				   UPDT_BY_USER_TYPE_TX, ENROLL_SUC_EMAIL_SEND_IN,
				   ENROLL_SUC_EMAIL_TMPLT_ID, ENROLL_STA_EMAIL_SEND_IN,
				   ENROLL_STA_EMAIL_TMPLT_ID, CMPGN_IM_URL_AD_TX,
				   EMS_EXTNL_PROMO_ID, EMS_EXTNL_PRTR_ID, CMPGN_LIVE_DT
			FROM tgabm00.GABM_CMPGN
			WHERE UPPER(CMPGN_NM) LIKE UPPER(HV_CMPGN_NM1);
		EXCEPTION
			WHEN OTHERS THEN
				SQLCODE := SQLSTATE;
				RESP_CD := 'E35174902';
				RESP_MSG := 'THE SYSTEM CANNOT PROCESS YOUR REQUEST. PLEASE TRY AFTER SOME TIME.';
				SQLCODE_PARM := SQLCODE;
				RETURN QUERY SELECT SQLCODE_PARM, RESP_CD, RESP_MSG, NULL::CHAR(25), NULL::CHAR(100), NULL::TEXT, NULL::CHAR(10), NULL::TEXT, NULL::TIMESTAMP, NULL::TIMESTAMP, NULL::INTEGER, NULL::INTEGER, NULL::TEXT, NULL::DATE, NULL::DATE, NULL::DATE, NULL::TEXT, NULL::TEXT, NULL::CHAR(1), NULL::CHAR(10), NULL::CHAR(1), NULL::CHAR(10), NULL::TEXT, NULL::CHAR(10), NULL::CHAR(10), NULL::DATE;
		END;
	ELSIF IN_FETCH_IND = 'CMPGNDT' THEN
		BEGIN
			SQLCODE := '0';
			RESP_CD := 'E35174003';
			RESP_MSG := 'CMPGN DETAIL FETCH SUCCESSFULLY.';
			SQLCODE_PARM := SQLCODE;
			RETURN QUERY
			SELECT SQLCODE_PARM, RESP_CD, RESP_MSG, CMPGN_ID, CMPGN_NM, CMPGN_DS, CMPGN_PROMO_CD, CMPGN_STA_TX,
				   CREAT_TS, LST_UPDT_TS, CMPGN_CONTEST_MAX_ENTER_CT,
				   CMPGN_TRGT_REGIS_CT, BUS_PRTR_DRCT_OWN_NM, CMPGN_STRT_DT,
				   CMPGN_END_DT, DA_PRG_DT, CREAT_BY_USER_TYPE_TX,
				   UPDT_BY_USER_TYPE_TX, ENROLL_SUC_EMAIL_SEND_IN,
				   ENROLL_SUC_EMAIL_TMPLT_ID, ENROLL_STA_EMAIL_SEND_IN,
				   ENROLL_STA_EMAIL_TMPLT_ID, CMPGN_IM_URL_AD_TX,
				   EMS_EXTNL_PROMO_ID, EMS_EXTNL_PRTR_ID, CMPGN_LIVE_DT
			FROM tgabm00.GABM_CMPGN
			WHERE CMPGN_STRT_DT >= IN_CMPGN_STRT_DT
			  AND CMPGN_END_DT <= IN_CMPGN_END_DT;
		EXCEPTION
			WHEN OTHERS THEN
				SQLCODE := SQLSTATE;
				RESP_CD := 'E35174903';
				RESP_MSG := 'THE SYSTEM CANNOT PROCESS YOUR REQUEST. PLEASE TRY AFTER SOME TIME.';
				SQLCODE_PARM := SQLCODE;
				RETURN QUERY SELECT SQLCODE_PARM, RESP_CD, RESP_MSG, NULL::CHAR(25), NULL::CHAR(100), NULL::TEXT, NULL::CHAR(10), NULL::TEXT, NULL::TIMESTAMP, NULL::TIMESTAMP, NULL::INTEGER, NULL::INTEGER, NULL::TEXT, NULL::DATE, NULL::DATE, NULL::DATE, NULL::TEXT, NULL::TEXT, NULL::CHAR(1), NULL::CHAR(10), NULL::CHAR(1), NULL::CHAR(10), NULL::TEXT, NULL::CHAR(10), NULL::CHAR(10), NULL::DATE;
		END;
	ELSIF IN_FETCH_IND = 'ACTCMPGN' THEN
		BEGIN
			SQLCODE := '0';
			RESP_CD := 'E35174005';
			RESP_MSG := 'ACTIVE CMPGN DETAIL FETCH SUCCESSFULLY.';
			SQLCODE_PARM := SQLCODE;
			RETURN QUERY
			SELECT SQLCODE_PARM, RESP_CD, RESP_MSG, CMPGN_ID, CMPGN_NM, CMPGN_DS, CMPGN_PROMO_CD, CMPGN_STA_TX,
				   CREAT_TS, LST_UPDT_TS, CMPGN_CONTEST_MAX_ENTER_CT,
				   CMPGN_TRGT_REGIS_CT, BUS_PRTR_DRCT_OWN_NM, CMPGN_STRT_DT,
				   CMPGN_END_DT, DA_PRG_DT, CREAT_BY_USER_TYPE_TX,
				   UPDT_BY_USER_TYPE_TX, ENROLL_SUC_EMAIL_SEND_IN,
				   ENROLL_SUC_EMAIL_TMPLT_ID, ENROLL_STA_EMAIL_SEND_IN,
				   ENROLL_STA_EMAIL_TMPLT_ID, CMPGN_IM_URL_AD_TX,
				   EMS_EXTNL_PROMO_ID, EMS_EXTNL_PRTR_ID, CMPGN_LIVE_DT
			FROM tgabm00.GABM_CMPGN
			WHERE CMPGN_END_DT >= CURRENT_DATE;
		EXCEPTION
			WHEN OTHERS THEN
				SQLCODE := SQLSTATE;
				RESP_CD := 'E35174905';
				RESP_MSG := 'THE SYSTEM CANNOT PROCESS YOUR REQUEST. PLEASE TRY AFTER SOME TIME.';
				SQLCODE_PARM := SQLCODE;
				RETURN QUERY SELECT SQLCODE_PARM, RESP_CD, RESP_MSG, NULL::CHAR(25), NULL::CHAR(100), NULL::TEXT, NULL::CHAR(10), NULL::TEXT, NULL::TIMESTAMP, NULL::TIMESTAMP, NULL::INTEGER, NULL::INTEGER, NULL::TEXT, NULL::DATE, NULL::DATE, NULL::DATE, NULL::TEXT, NULL::TEXT, NULL::CHAR(1), NULL::CHAR(10), NULL::CHAR(1), NULL::CHAR(10), NULL::TEXT, NULL::CHAR(10), NULL::CHAR(10), NULL::DATE;
		END;
	ELSE
		SQLCODE := '0';
		RESP_CD := 'E35174104';
		RESP_MSG := 'INVALID SEARCH PARAMETER.';
		SQLCODE_PARM := SQLCODE;
		RETURN QUERY SELECT SQLCODE_PARM, RESP_CD, RESP_MSG, NULL::CHAR(25), NULL::CHAR(100), NULL::TEXT, NULL::CHAR(10), NULL::TEXT, NULL::TIMESTAMP, NULL::TIMESTAMP, NULL::INTEGER, NULL::INTEGER, NULL::TEXT, NULL::DATE, NULL::DATE, NULL::DATE, NULL::TEXT, NULL::TEXT, NULL::CHAR(1), NULL::CHAR(10), NULL::CHAR(1), NULL::CHAR(10), NULL::TEXT, NULL::CHAR(10), NULL::CHAR(10), NULL::DATE;
	END IF;
EXCEPTION
	WHEN OTHERS THEN
		SQLCODE := SQLSTATE;
		RESP_CD := 'E35174999';
		RESP_MSG := 'UNEXPECTED ERROR OCCURRED.';
		SQLCODE_PARM := SQLCODE;
		RETURN QUERY SELECT SQLCODE_PARM, RESP_CD, RESP_MSG, NULL::CHAR(25), NULL::CHAR(100), NULL::TEXT, NULL::CHAR(10), NULL::TEXT, NULL::TIMESTAMP, NULL::TIMESTAMP, NULL::INTEGER, NULL::INTEGER, NULL::TEXT, NULL::DATE, NULL::DATE, NULL::DATE, NULL::TEXT, NULL::TEXT, NULL::CHAR(1), NULL::CHAR(10), NULL::CHAR(1), NULL::CHAR(10), NULL::TEXT, NULL::CHAR(10), NULL::CHAR(10), NULL::DATE;
END;

